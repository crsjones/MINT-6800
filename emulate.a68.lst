0000                          .ENGINE   mycomputer   
0000                             ; *************************************************************************
0000                             ; 
0000                             ;       MINT Minimal Interpreter for the 6800 
0000                             ; 
0000                             ;       Ken Boak, John Hardy and Craig Jones. 
0000                             ; 
0000                             ;       GNU GENERAL PUBLIC LICENSE                   Version 3, 29 June 2007
0000                             ; 
0000                             ;       see the LICENSE file in this repo for more information 
0000                             ; 
0000                             ; *****************************************************************************
0000                             ; 
0000                             ; ASM80 emulator build
0000                             ; 
0000                PGMSTART:   EQU   $f800   
0000                ROMSTART:   EQU   $f800   
0000                RAMSTART:   EQU   $0000   
0000                             ; 
0000                          .ENT   PGMSTART   
0000                             ; 
F800                          .ORG   PGMSTART   
F800   8E 07 FF               LDS   #$07ff   
F803   BD F8 12               JSR   InitialiseSerial   
F806                             ; 
F806   86 61        LOOP:     LDAA   #"a"   
F808   BD F8 20               JSR   TxChar   
F80B   C6 FF                  LDAB   #$ff   
F80D   5A           LOOP1:    DECB      
F80E   26 FD                  BNE   loop1   
F810   20 F4                  BRA   loop   
F812                             ; 
F812                             ; *************************************************************************
F812                             ; 
F812                             ;       MINT Minimal Interpreter for the 6800 
F812                             ; 
F812                             ;       Ken Boak, John Hardy and Craig Jones. 
F812                             ; 
F812                             ;       GNU GENERAL PUBLIC LICENSE                   Version 3, 29 June 2007
F812                             ; 
F812                             ;       see the LICENSE file in this repo for more information 
F812                             ; 
F812                             ; *****************************************************************************
F812                             ; 
F812                             ; 
F812                             ; 6850 ACIA registers
F812                             ;----------------------
F812                CONTROL:   EQU   $8000   ;(write) 
F812                STATUS:   EQU   $8000   ;(read)
F812                TDR:      EQU   $8001   ;(write)
F812                RDR:      EQU   $8001   ;(read)
F812                             ; 
F812                             ; control register bits
F812                             ;----------------------
F812                             ; 
F812                             ;clock divisor
F812                             ; 
F812                MRESET:   EQU   $03   ;master reset the ACIA
F812                CLKDIV_0:   EQU   $00   ;CLOCK/1
F812                CLKDIV_16:   EQU   $01   ;CLOCK/16
F812                CLKDIV_64:   EQU   $02   ;CLOCK/64
F812                             ; 
F812                             ; format select
F812                             ; 
F812                F7E2:     EQU   $00   ;7 data bits, EVEN parity, 2 stop bits (1+7+1+2= 11 bits)
F812                F7O2:     EQU   $04   ;7 data bits, ODD parity, 2 stop bits (1+7+1+2= 11 bits)
F812                F7E1:     EQU   $08   ;7 data bits, EVEN parity, 1 stop bit (1+7+1+1= 10 bits)
F812                F7O1:     EQU   $0C   ;7 data bits, ODD parity, 1 stop bit (1+7+1+1= 10 bits)
F812                F8N2:     EQU   $10   ;8 data bits, NO parity, 2 stop bits (1+8+0+2= 11 bits)
F812                F8N1:     EQU   $14   ;8 data bits, NO parity, 1 stop bit (1+8+0+1= 10 bits)
F812                F8E1:     EQU   $18   ;8 data bits, EVEN parity, 1 stop bit (1+8+1+1= 11 bits)
F812                F8O1:     EQU   $1C   ;8 data bits, ODD parity,1 stop bit (1+8+1+1= 11 bits)
F812                             ; 
F812                             ; transmitter control
F812                             ; 
F812                RTSLID:   EQU   $00   ;RTS LOW, transmit interrupt disabled
F812                RTSLIE:   EQU   $20   ;RTS LOW, transmit interrupt enabled
F812                RTSHID:   EQU   $40   ;RTS HIGH, transmit interrupt disabled
F812                RTSLIDB:   EQU   $60   ;RTS LOW, transmit interrupt disabled and "break" transmitted
F812                             ; 
F812                             ; receiver interrupt
F812                             ; 
F812                RIE:      EQU   $80   ;receiver interrupt enabled
F812                             ; 
F812                             ; status register bits
F812                             ;---------------------
F812                RDRF:     EQU   0   ;receive data register full
F812                TDRE:     EQU   1   ;transmit data register empty
F812                DCD:      EQU   2   ;data carrier detect
F812                CTS:      EQU   3   ;clear to send
F812                FE:       EQU   4   ;framing error
F812                OVRN:     EQU   5   ;overrun
F812                PE:       EQU   6   ;parity error
F812                IRQ:      EQU   7   ;interrupt request
F812                             ; 
F812                             ; initialise ACIA
F812                             ;----------------
F812                INITIALISESERIAL:      
F812   86 03                  LDAA   #MRESET   
F814   B7 80 00               STAA   CONTROL   ;reset the ACIA
F817   01                     NOP      
F818   01                     NOP      
F819   01                     NOP      
F81A                             ;initialise ACIA  8 bit word, No parity 2 stop divide by 64 for 115200 baud
F81A   86 12                  LDAA   #RTSLID+F8N2+CLKDIV_64   
F81C   B7 80 00               STAA   CONTROL   
F81F   39                     RTS      
F820                             ; 
F820                             ; transmit a character in a
F820                             ;--------------------------
F820                TXCHAR:      
F820   36                     PSHA      ;save the character for later
F821                TXCHAR1:      
F821   B6 80 00               LDAA   STATUS   ;get the ACIA status
F824   85 01                  BITA   #TDRE   ;bit  TDRE,a is the TDRE bit high?
F826   27 F9                  BEQ   TxChar1   ;no, the TDR is not empty
F828   32                     PULA      ;yes, get the character back
F829   B7 80 01               STAA   TDR   ;and put it in the TDR
F82C   39                     RTS      
F82D                             ; 
F82D                             ; receive  a character in a
F82D                             ;---------------------------------
F82D                RXCHAR:      
F82D   B6 80 00               LDAA   STATUS   ;get the ACIA status
F830   85 00                  BITA   #RDRF   ;bit   RDRF,a is the RDRF bit high?
F832   27 F9                  BEQ   RxChar   ;no, the RDR is empty
F834   B6 80 01               LDAA   RDR   ;yes, read the received char
F837   39                     RTS      
F838                             ; 
FFFE                          .ORG   $fffe   
FFFE   F8 00                  DW   PGMSTART   
10000                         .END      


PGMSTART:           F800 DEFINED AT LINE 16
                    > USED AT LINE 20
                    > USED AT LINE 22
                    > USED AT LINE 36
ROMSTART:           F800 DEFINED AT LINE 17
RAMSTART:           0000 DEFINED AT LINE 18
LOOP:               F806 DEFINED AT LINE 26
                    > USED AT LINE 31
LOOP1:              F80D DEFINED AT LINE 29
                    > USED AT LINE 30
CONTROL:            8000 DEFINED AT LINE 16 IN Char-6850.a68
                    > USED AT LINE 68 IN Char-6850.a68
                    > USED AT LINE 74 IN Char-6850.a68
STATUS:             8000 DEFINED AT LINE 17 IN Char-6850.a68
                    > USED AT LINE 82 IN Char-6850.a68
                    > USED AT LINE 92 IN Char-6850.a68
TDR:                8001 DEFINED AT LINE 18 IN Char-6850.a68
                    > USED AT LINE 86 IN Char-6850.a68
RDR:                8001 DEFINED AT LINE 19 IN Char-6850.a68
                    > USED AT LINE 95 IN Char-6850.a68
MRESET:             0003 DEFINED AT LINE 26 IN Char-6850.a68
CLKDIV_0:           0000 DEFINED AT LINE 27 IN Char-6850.a68
CLKDIV_16:          0001 DEFINED AT LINE 28 IN Char-6850.a68
CLKDIV_64:          0002 DEFINED AT LINE 29 IN Char-6850.a68
F7E2:               0000 DEFINED AT LINE 33 IN Char-6850.a68
F7O2:               0004 DEFINED AT LINE 34 IN Char-6850.a68
F7E1:               0008 DEFINED AT LINE 35 IN Char-6850.a68
F7O1:               000C DEFINED AT LINE 36 IN Char-6850.a68
F8N2:               0010 DEFINED AT LINE 37 IN Char-6850.a68
F8N1:               0014 DEFINED AT LINE 38 IN Char-6850.a68
F8E1:               0018 DEFINED AT LINE 39 IN Char-6850.a68
F8O1:               001C DEFINED AT LINE 40 IN Char-6850.a68
RTSLID:             0000 DEFINED AT LINE 44 IN Char-6850.a68
RTSLIE:             0020 DEFINED AT LINE 45 IN Char-6850.a68
RTSHID:             0040 DEFINED AT LINE 46 IN Char-6850.a68
RTSLIDB:            0060 DEFINED AT LINE 47 IN Char-6850.a68
RIE:                0080 DEFINED AT LINE 51 IN Char-6850.a68
RDRF:               0000 DEFINED AT LINE 55 IN Char-6850.a68
TDRE:               0001 DEFINED AT LINE 56 IN Char-6850.a68
DCD:                0002 DEFINED AT LINE 57 IN Char-6850.a68
CTS:                0003 DEFINED AT LINE 58 IN Char-6850.a68
FE:                 0004 DEFINED AT LINE 59 IN Char-6850.a68
OVRN:               0005 DEFINED AT LINE 60 IN Char-6850.a68
PE:                 0006 DEFINED AT LINE 61 IN Char-6850.a68
IRQ:                0007 DEFINED AT LINE 62 IN Char-6850.a68
INITIALISESERIAL:   F812 DEFINED AT LINE 66 IN Char-6850.a68
                    > USED AT LINE 24
TXCHAR:             F820 DEFINED AT LINE 79 IN Char-6850.a68
                    > USED AT LINE 27
TXCHAR1:            F821 DEFINED AT LINE 81 IN Char-6850.a68
                    > USED AT LINE 84 IN Char-6850.a68
RXCHAR:             F82D DEFINED AT LINE 91 IN Char-6850.a68
                    > USED AT LINE 94 IN Char-6850.a68
